---
apiVersion: kubevirt.io/v1alpha3
kind: VirtualMachine
metadata:
  name: fedora-ephemeral-v34n01
  namespace: kargo
  labels:
    app: fedora-ephemeral-v34n01
spec:
  running: true
  dataVolumeTemplates:
  - metadata:
      name: fedora-ephemeral-vda-root
      annotations:
        kubevirt.io/provisionOnNode: mordor
    spec:
      config:
        featureGates:
        - HonorWaitForFirstConsumer
      nodeSelector:
        node-role.kubernetes.io/wan: ""
      pvc:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 64G
        storageClassName: openebs-hostpath-ram
      source:
        registry:
          url: "docker://quay.io/containercraft/fedora:34"
          name: fedora-ephemeral
  template:
    spec:
#     nodeSelector:
#       node-role.kubernetes.io/wan: ""
      terminationGracePeriodSeconds: 0
      hostname: fedora-ephemeral-v34n01
      domain:
        cpu:
          cores: 4
          threads: 2
          sockets: 1
          dedicatedCpuPlacement: false
          model: host-model
        machine:
          type: pc-q35-rhel8.2.0
        resources:
          requests:
            memory: 8Gi
          limits:
            memory: 8Gi
        devices:
          autoattachPodInterface: false
          autoattachSerialConsole: true
          autoattachGraphicsDevice: true
          networkInterfaceMultiqueue: true
          rng: {}
          disks:
            - name: root-disk
              bootOrder: 1
              disk:
                bus: virtio
            - name: cloudinitdisk
              disk:
                bus: virtio
          interfaces:
          - name: eth0
            model: virtio
            bridge: {}
          - name: eth1
            model: virtio
            bridge: {}
#       features:
#         smm:
#           enabled: true
#       firmware:
#         bootloader:
#           efi:
#             secureBoot: false
      networks:
      - name: eth0
        multus:
          networkName: kargo-net-attach-def-wan0
      - name: eth1
        multus:
          networkName: kargo-net-attach-def-br0
      volumes:
        - name: root-disk
          dataVolume:
            name: fedora-ephemeral-vda-root
        - name: cloudinitdisk
          cloudInitNoCloud:
            userData: |-
              #!/bin/bash -x
              echo "fedora" | passwd fedora --stdin
              mkdir /home/fedora/.ssh
              touch /home/fedora/.ssh/authorized_keys
              chmod 600 /home/fedora/.ssh/authorized_keys
              chown fedora:fedora -R /home/fedora/.ssh
              curl -L https://github.com/usrbinkat.keys | tee -a /home/fedora/.ssh/authorized_keys
              sudo grubby --update-kernel=ALL --args 'cgroup_memory=1 cgroup_enable=cpuset cgroup_enable=memory systemd.unified_cgroup_hierarchy=0 intel_iommu=on iommu=pt rd.driver.pre=vfio-pci pci=realloc'
              sudo dnf -y install openssh-server qemu-guest-agent @virtualization lnav tmux vi vim
              sudo echo 'unix_sock_group = "libvirt"' > /etc/libvirt/libvirtd.conf
              sudo echo 'unix_sock_rw_perms = "0770"' > /etc/libvirt/libvirtd.conf
              sudo systemctl enable --now qemu-guest-agent
              sudo systemctl enable --now libvirtd
              sudo systemctl restart libvirtd
              sudo systemctl enable --now sshd
              sudo usermod -aG libvirt fedora
              sudo dnf -y groupinstall "Container Management"
              sudo dnf update -y
              sudo grubby --update-kernel=ALL --args 'cgroup_memory=1 cgroup_enable=cpuset cgroup_enable=memory systemd.unified_cgroup_hierarchy=0 intel_iommu=on iommu=pt rd.driver.pre=vfio-pci pci=realloc'
              sudo reboot
