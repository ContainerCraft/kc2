apiVersion: kubevirt.io/v1
kind: VirtualMachine
metadata:
  name: docker-compose
  namespace: kargo
  labels:
    node: "spindle"
    app: docker-compose
    kubevirt.io/os: linux
    kubevirt.io/nodeName: spindle
spec:
  running: true
  template:
    metadata:
      labels:
        kubevirt.io/domain: docker-compose
    spec:
      nodeSelector:
        node-role.kubernetes.io/kubevirt: ""
      terminationGracePeriodSeconds: 0
      domain:
        cpu:
          cores: 4
          threads: 1
          sockets: 1
          model: host-passthrough
          dedicatedCpuPlacement: false
        resources:
          requests:
            memory: 4G
        machine:
          type: pc-q35-rhel8.3.0
        clock:
          utc: {}
          timer: {}
        devices:
          autoattachPodInterface: false
          autoattachSerialConsole: true
          autoattachGraphicsDevice: true
          networkInterfaceMultiqueue: false
          rng: {}
          disks:
          - name: vda-root-disk
            bootOrder: 1
            disk:
              bus: virtio
          - name: cloudinitdisk
            cdrom:
              bus: sata
              readonly: true
          interfaces:
          - name: eth0
            model: virtio
            bridge: {}
      networks:
      - name: eth0
        multus:
          networkName: kargo-net-attach-def-br0
      volumes:
      - name: vda-root-disk
        containerDisk:
          image: quay.io/containercraft/amzn2linux:latest
          imagePullPolicy: Always
      - name: cloudinitdisk
        cloudInitNoCloud:
          userData: |
            #cloud-config
            ssh_pwauth: true
            chpasswd:
              list: |
                 ec2-user:ec2-user
              expire: False
            users:
              - default
              - name: docker
                sudo: ['ALL=(ALL) NOPASSWD:ALL']
                groups: sudo
                shell: /bin/bash
                ssh-authorized-keys:
                  - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAAB/zPcAdyHRElufWDNQ1mZUWp4V9jDmaWX35ApsXgxfMHBuz3n8VLGVJuXodAAxeRbbE7Rws8BQcCH4DAMKKLHYZRdJtk3ZUw7rm0i/aq0wkeld7Yp6H/fv1ud3mudp7/+3fQ3gV8RmAO8+FS4jNBMciqtY6mWThKciwnkBWmH5atl6GsZ1ZQ+Y8+W4hXnaF6UEU1+xZ8ja+hu81a9fhejcV+m3RwT511kW5IXDe6wkq9tsIEC529VGI7XuySYvusbchivWYxmE+TBMmId3voGCfkl8hIemUG3/LvQWeK95B/6vBKDCFlmABn60zxrjPkdknWPbu4zg+VJWnslX+rDqSe2cBpHqQ8yDxegPcmXNKv2Qp0h8HhEljWoLc4U5x4hlceDraWBehj8i4N6p+Yt678+jUpOCwGC8z9l+zUrG6NPvbHZ2aIBC3eUteYPtmScNLvOiFASPo/9GQQDNqZclQZf5QGDToAV2rV1B4jJPV8fv/1rlgen6O1PNitKo9FlUfr0WA1IXev6CiJUt4x210BzhTlD84S2A0gHJRbeVVkjWKMx/vo/wqEKTg/vvzSOhFDDlKUxSsguL5rrtOxdGj4sUtjeVRuDjwk1u1DH8P75rI0R/1QaeDixJbRi8Q1315z+MrvJuvzJpMTieldqffNUnexMZcFox8yI8KlVt2U=
            hostname: docker-compose
            runcmd:
              - "yum update"
              - "yum upgrade -y"
              - "yum install -y qemu-guest-agent git"
              - "systemctl enable --now qemu-guest-agent"
              - "amazon-linux-extras install docker -y"
              - "service docker start"
              - "chkconfig docker on"
              - "curl -L https://github.com/docker/compose/releases/latest/download/docker-compose-Linux-x86_64 -o /usr/local/sbin/docker-compose"
              - "chmod +x /usr/local/sbin/docker-compose"
              - "/usr/local/sbin/docker-compose version"
