name: x86_64 Ubuntu
on:
  schedule:
    - cron: '0 1 * * *'
  push:
    paths:
      - 'preview/ubuntu/x86_64/*'
      - '.github/workflows/ubuntu.yml'
  pull_request:
    types: [closed]
    paths:
      - 'preview/ubuntu/x86_64/*'
      - '.github/workflows/ubuntu.yml'


jobs:
  build_test_publish:
    #if: github.event.pull_request.merged == true
    runs-on: self-hosted 
    strategy:
      matrix:
        version:
          - name: impish
            number: '21.10'
            url: https://cloud-images.ubuntu.com/impish/current/impish-server-cloudimg-amd64-disk-kvm.img
            arch: amd64
          - name: focal
            number: '20.04'
            url: https://cloud-images.ubuntu.com/focal/current/focal-server-cloudimg-amd64.img
            arch: amd64
          - name: bionic
            number: '18.04'
            url: https://cloud-images.ubuntu.com/bionic/current/bionic-server-cloudimg-amd64.img
            arch: amd64
      fail-fast: false
    env:
      FLAVOR: ubuntu
      DOWNLOAD_URL: "${{ matrix.version.url }}"
      VERSION: "${{ matrix.version.number }}"
      NAME: "${{ matrix.version.name }}"
      ARCH: "${{ matrix.version.arch }}"

    steps:

#   - name: Install Dependencies
#     run: |
#       set -ex
#       sudo apt-get update -y
#       sudo apt-get install -y libguestfs-tools
#       echo

    - name: Code Checkout
      uses: actions/checkout@v2.4.0

    - name: Download & Prepare Ubuntu ${{ matrix.version.number }} Cloud Image
      run: |
        set -ex
        curl --output source.${FLAVOR}.qcow2 -L "${DOWNLOAD_URL}"
        qemu-img resize source.${FLAVOR}.qcow2 +20G
        virt-sparsify --compress --tmp tmp source.${FLAVOR}.qcow2 ${FLAVOR}.qcow2
        qemu-img info ${FLAVOR}.qcow2

    - name: Build kc2 Ubuntu ${{ matrix.version.number }} Image
      run: |
        set -ex
        df -h /
        virt-sysprep -va ${FLAVOR}.qcow2 \
          --network \
          --enable user-account,logfiles,customize,bash-history,net-hostname,net-hwaddr,machine-id,dhcp-server-state,dhcp-client-state,yum-uuid,udev-persistent-net,tmp-files,smolt-uuid,rpm-db,package-manager-cache \
          --update                                                      \
          --run-command 'apt-get autoremove -y'                         \
          --install screenfetch,python3,tmux,git,vim,net-tools,cloud-init,cloud-initramfs-growroot,qemu-guest-agent \
          --run-command 'systemctl enable qemu-guest-agent'             \
          --run-command 'apt-get purge -y'                              ;
        virt-sparsify --compress --tmp tmp ${FLAVOR}.qcow2 ${FLAVOR}.sparse.qcow2
        rm ${FLAVOR}.qcow2

    - name: Build kc2 Ubuntu ${{ matrix.version.number }} Cradle
      run: |
        set -ex
        qemu-img info ${FLAVOR}.sparse.qcow2
        ./cradle --image-name quay.io/containercraft/${FLAVOR} --image-tag ${VERSION} --image-file ${FLAVOR}.sparse.qcow2
        rm -rf /tmp/cradle /tmp/${FLAVOR}.qcow2 /tmp/${FLAVOR}.sparse.qcow2 ${FLAVOR}.qcow2 ${FLAVOR}.sparse.qcow2

#   - name: Login Quay.io
#     uses: docker/login-action@v1.10.0
#     with:
#       logout: false
#       registry: quay.io
#       username: ${{ secrets.ROBOT_USER_QUAY }}
#       password: ${{ secrets.ROBOT_TOKEN_QUAY }}

    - name: Push Ubuntu ${{ matrix.version.number }} Cradle
      # if: github.event.pull_request.merged == true
      run: |
        set -ex
        export REGISTRY_AUTH_FILE="${HOME}/.docker/config.json"
        buildah images quay.io/containercraft/${FLAVOR}:${VERSION}
        buildah push   quay.io/containercraft/${FLAVOR}:${VERSION}
        buildah push   quay.io/containercraft/${FLAVOR}:${VERSION} quay.io/containercraft/${FLAVOR}:${NAME}
        buildah rmi    quay.io/containercraft/${FLAVOR}:${VERSION}
