---
# VyOS VM Specification for KubeVirt
# Optimized and tuned for secure, segmented network architecture as described in README.md

apiVersion: kubevirt.io/v1
kind: VirtualMachine
metadata:
  name: vyos-blue
  namespace: default
  labels:
    app: vyos
  annotations:
    # Enable live migration for VMs with pod bridge interfaces
    kubevirt.io/allow-pod-bridge-network-live-migration: "true"
    # Ensure the VM is re-provisioned if the node changes
    kubevirt.io/provisionOnNodeChange: "true"
spec:
  # Automatically restarts the VM on failure
  runStrategy: RerunOnFailure
  template:
    metadata:
      labels:
        app: vyos
        # Indicate this VM is a router in the network
        vyos-role: router
    spec:
      # Sets the VM's hostname
      hostname: vyos-blue
      terminationGracePeriodSeconds: 0
      domain:
        cpu:
          # Configures the VM with 2 CPU cores
          # Single CPU socket for simplicity
          # Two threads per core for multi-threaded processing
          # Use the host-passthrough cpu for near native performance
          cores: 2
          sockets: 1
          threads: 2
          model: host-passthrough
        memory:
          # Allocate 2GiB of memory to the VM
          guest: 2Gi
        devices:
          # Add a random number generator device for entropy
          rng: {}
          autoattachPodInterface: false
          # Enable access to a serial console for management
          autoattachSerialConsole: true
          # Disable graphical device attachment since it's not needed for VyOS
          autoattachGraphicsDevice: false
          disks:
            - name: containerdisk
              bootOrder: 1 # Configures this disk as the boot disk
              disk:
                bus: virtio
            - name: cloudinitdisk
              disk:
                bus: virtio
          interfaces:
            # Configures a bridge interface for external network connectivity
            - bridge: {}
              name: eth0
              # Assign a static MAC address for deterministic router iface
              macAddress: "52:54:00:ab:cd:ef"
      networks:
        # Connects the VM to the Multus network "br0", a managed switch trunk port
        - name: eth0
          multus:
            networkName: br0
      volumes:
        - name: containerdisk
          # Use the containerDisk ephemeral OS for VyOS
          containerDisk:
            # Pull VyOS rolling release qcow2 disk image from ContainerCraft on Docker Hub
            image: docker.io/containercraft/vyos:si240106
            imagePullPolicy: IfNotPresent
        # Attach the VyOS config user-data from Kubernetes secret for declarative configuration on boot
        - name: cloudinitdisk
          cloudInitNoCloud:
            secretRef:
              name: wan0vyos-cloudconfig

